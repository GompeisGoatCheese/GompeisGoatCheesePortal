[{"/Users/gabrielleacquista/Documents/ACADEMIC/MQP/test-app/src/index.js":"1","/Users/gabrielleacquista/Documents/ACADEMIC/MQP/test-app/src/reportWebVitals.js":"2","/Users/gabrielleacquista/Documents/ACADEMIC/MQP/test-app/src/App.js":"3","/Users/gabrielleacquista/Documents/ACADEMIC/MQP/test-app/src/components/Orders.js":"4","/Users/gabrielleacquista/Documents/ACADEMIC/MQP/test-app/src/components/Invoices.js":"5","/Users/gabrielleacquista/Documents/ACADEMIC/MQP/test-app/src/components/Dashboard.js":"6","/Users/gabrielleacquista/Documents/ACADEMIC/MQP/test-app/src/components/Navbar.js":"7","/Users/gabrielleacquista/Documents/ACADEMIC/MQP/test-app/src/components/QuickStats.js":"8"},{"size":494,"mtime":1663339077171,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1663042342858,"results":"11","hashOfConfig":"10"},{"size":6592,"mtime":1651129408000,"results":"12","hashOfConfig":"10"},{"size":16207,"mtime":1649457440000,"results":"13","hashOfConfig":"10"},{"size":6432,"mtime":1651129516000,"results":"14","hashOfConfig":"10"},{"size":269,"mtime":1649122122000,"results":"15","hashOfConfig":"10"},{"size":3660,"mtime":1646029308000,"results":"16","hashOfConfig":"10"},{"size":2370,"mtime":1651123340000,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"a9ita1",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/gabrielleacquista/Documents/ACADEMIC/MQP/test-app/src/index.js",[],[],"/Users/gabrielleacquista/Documents/ACADEMIC/MQP/test-app/src/reportWebVitals.js",[],[],"/Users/gabrielleacquista/Documents/ACADEMIC/MQP/test-app/src/App.js",["46","47","48","49","50","51","52","53","54","55","56"],[],"import logo from './components/img/ggc_logo.png';\nimport './App.css';\nimport NavBar from './components/Navbar';\nimport Dashboard from './components/Dashboard';\nimport Orders from './components/Orders';\nimport Invoices from './components/Invoices';\nimport { useState } from 'react'\n\nexport const DisplayContent = {\n\tDASHBOARD: 1,\n\tORDERS: 2,\n\tINVOICES: 3,\n\tORDER_SEARCH: 4,\n\tHELP: 5,\n\tLOGOUT: 6,\n}\n\nconst UserStatus = {\n\tGGC: 1,\n\tFARM: 2,\n\tLOGGED_OUT: 3,\n}\n\nconst App = ({}) => {\n\t//For local demo\n\tconst [orders, setOrders] = useState([\n\t\t{\n\t\t\tid: '1234',\n\t\t\treferenceNumber: '1234',\n\t\t\tinvoiceNumber: '5678',\n\t\t\tstatus: 'PLACED',\n\t\t\tdatePlaced: '2/24/2022',\n\t\t\trevenue: 26.00,\n\t\t\tisSelfOrder: false,\n\t\t\tisGift: true,\n\t\t\tgiftFor: 'Mr. Gompei',\n\t\t\tgiftMessage: 'Enjoy this cheese made from other goats! On second thought, maybe not...',\n\t\t\tshipmentTrackingNumber: 'ABCD',\n\t\t\tcustomer: {\n\t\t\t\tid: '1',\n\t\t\t\temail: 'customer@wpi.edu',\n\t\t\t\tfirstName: 'Frank',\n\t\t\t\tlastName: 'McGovern',\n\t\t\t\tphoneNumber: '20397588636',\n\t\t\n\t\t\t},\n\t\t\tproductsOrdered: [{\n\t\t\t\tid: '1',\n\t\t\t\tquantity: 3,\n\t\t\t\tproduct: {\n\t\t\t\t\tid: 'jPL6',\n\t\t\t\t\tname: 'plain',\n\t\t\t\t\tproductDescription: 'A six oz log of plain goat cheese',\n\t\t\t\t}\t\n\t\t\t}],\n\t\t\tshippingAddress: {\n\t\t\t\tid: '1',\n\t\t\t\tstreetAddress: '86 Brook road',\n\t\t\t\tcity: 'Southwick',\n\t\t\t\tstate: 'NH',\n\t\t\t\tzipCode: '00675',\n\t\t\t},\n\t\t\tinvoice: {\n\t\t\t\tid: '1',\n\t\t\t\tinvoiceNumber: '5678',\n\t\t\t\texpense: 21.50,\n\t\t\t\tisPaid: true,\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tid: '1235',\n\t\t\treferenceNumber: '1235',\n\t\t\tinvoiceNumber: '5678',\n\t\t\tstatus: 'PROCESSED',\n\t\t\tdatePlaced: '2/24/2022',\n\t\t\trevenue: 26.00,\n\t\t\tisSelfOrder: false,\n\t\t\tisGift: true,\n\t\t\tgiftFor: 'Mr. Gompei',\n\t\t\tgiftMessage: 'Enjoy this cheese made from other goats! On second thought, maybe not...',\n\t\t\tshipmentTrackingNumber: 'ABCD',\n\t\t\tcustomer: {\n\t\t\t\tid: '1',\n\t\t\t\temail: 'customer@wpi.edu',\n\t\t\t\tfirstName: 'Chad',\n\t\t\t\tlastName: 'Buttler',\n\t\t\t\tphoneNumber: '20397588636',\n\t\t\n\t\t\t},\n\t\t\tproductsOrdered: [{\n\t\t\t\tid: '1',\n\t\t\t\tquantity: 3,\n\t\t\t\tproduct: {\n\t\t\t\t\tid: 'jPL6',\n\t\t\t\t\tname: 'plain',\n\t\t\t\t\tproductDescription: 'A six oz log of plain goat cheese',\n\t\t\t\t}\t\n\t\t\t}],\n\t\t\tshippingAddress: {\n\t\t\t\tid: '1',\n\t\t\t\tstreetAddress: '86 Brook road',\n\t\t\t\tcity: 'Southwick',\n\t\t\t\tstate: 'NH',\n\t\t\t\tzipCode: '00675',\n\t\t\t},\n\t\t\tinvoice: {\n\t\t\t\tid: '1',\n\t\t\t\tinvoiceNumber: '5678',\n\t\t\t\texpense: 21.50,\n\t\t\t\tisPaid: false,\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tid: '1236',\n\t\t\treferenceNumber: '1236',\n\t\t\tinvoiceNumber: '5678',\n\t\t\tstatus: 'PROCESSED',\n\t\t\tdatePlaced: '2/24/2022',\n\t\t\trevenue: 26.00,\n\t\t\tisSelfOrder: false,\n\t\t\tisGift: true,\n\t\t\tgiftFor: 'Mr. Gompei',\n\t\t\tgiftMessage: 'Enjoy this cheese made from other goats! On second thought, maybe not...',\n\t\t\tshipmentTrackingNumber: 'ABCD',\n\t\t\tcustomer: {\n\t\t\t\tid: '1',\n\t\t\t\temail: 'customer@wpi.edu',\n\t\t\t\tfirstName: 'William',\n\t\t\t\tlastName: 'Fancyson',\n\t\t\t\tphoneNumber: '20397588636',\n\t\t\n\t\t\t},\n\t\t\tproductsOrdered: [{\n\t\t\t\tid: '1',\n\t\t\t\tquantity: 3,\n\t\t\t\tproduct: {\n\t\t\t\t\tid: 'jPL6',\n\t\t\t\t\tname: 'plain',\n\t\t\t\t\tproductDescription: 'A six oz log of plain goat cheese',\n\t\t\t\t}\t\n\t\t\t}],\n\t\t\tshippingAddress: {\n\t\t\t\tid: '1',\n\t\t\t\tstreetAddress: '86 Brook road',\n\t\t\t\tcity: 'Southwick',\n\t\t\t\tstate: 'NH',\n\t\t\t\tzipCode: '00675',\n\t\t\t},\n\t\t\tinvoice: {\n\t\t\t\tid: '1',\n\t\t\t\tinvoiceNumber: '5678',\n\t\t\t\texpense: 21.50,\n\t\t\t\tisPaid: false,\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tid: '1237',\n\t\t\treferenceNumber: '1237',\n\t\t\tinvoiceNumber: '5678',\n\t\t\tstatus: 'PROCESSED',\n\t\t\tdatePlaced: '2/24/2022',\n\t\t\trevenue: 26.00,\n\t\t\tisSelfOrder: false,\n\t\t\tisGift: true,\n\t\t\tgiftFor: 'Mr. Gompei',\n\t\t\tgiftMessage: 'Enjoy this cheese made from other goats! On second thought, maybe not...',\n\t\t\tshipmentTrackingNumber: 'ABCD',\n\t\t\tcustomer: {\n\t\t\t\tid: '1',\n\t\t\t\temail: 'customer@wpi.edu',\n\t\t\t\tfirstName: 'James',\n\t\t\t\tlastName: 'Fazzino',\n\t\t\t\tphoneNumber: '20397588636',\n\t\t\n\t\t\t},\n\t\t\tproductsOrdered: [{\n\t\t\t\tid: '1',\n\t\t\t\tquantity: 3,\n\t\t\t\tproduct: {\n\t\t\t\t\tid: 'jPL6',\n\t\t\t\t\tname: 'plain',\n\t\t\t\t\tproductDescription: 'A six oz log of plain goat cheese',\n\t\t\t\t}\t\n\t\t\t}],\n\t\t\tshippingAddress: {\n\t\t\t\tid: '1',\n\t\t\t\tstreetAddress: '86 Brook road',\n\t\t\t\tcity: 'Southwick',\n\t\t\t\tstate: 'NH',\n\t\t\t\tzipCode: '00675',\n\t\t\t},\n\t\t\tinvoice: {\n\t\t\t\tid: '1',\n\t\t\t\tinvoiceNumber: '5678',\n\t\t\t\texpense: 21.50,\n\t\t\t\tisPaid: false,\n\t\t\t},\n\t\t},\n\n\t])\n\n\tconst [displayContent, setDisplayContent] = useState(DisplayContent.DASHBOARD)\n\tconst [userStatus, setUserStatus] = useState(DisplayContent.GGC)\n\n\tconst updateOrder = (order) => {\n\t\t//where API code could go\n\t\tvar newList = orders.filter(o => o.id !== order.id) \n\t\tsetOrders([...newList, order])\n\t}\n\n\tconst deleteOrder = (order) => {\n\t\t//where API code could go\n\t\tsetOrders(orders.filter(o => o.id !== order.id))\n\t}\n\n\tconst addOrder = (order) => {\n\t\t//where API code could go\n\t\tsetOrders([...orders, order])\n\t}\n\n\tconst getQuickStatsData = () => {\n\t\t//where API code could go\n\t\tvar data = {\n\t\t\tactiveOrders: 0,\n\t\t\tactiveInvoices: 0,\n\t\t\tordersPlaced: 0,\n\t\t\tordersProcessed: 0,\n\t\t\tordersShipped: 0,\n\t\t\tmissingInvoices: 0,\n\t\t\tunpaidInvoices: 0,\n\t\t}\n\n\t\tfor(var i = 0; i < orders.length; i++){\n\t\t\tvar currentOrder = orders[i];\n\t\t\tif(currentOrder.status === 'PLACED'){\n\t\t\t\tdata.ordersPlaced++\n\t\t\t\tdata.activeOrders++\n\n\t\t\t} else if(currentOrder.status === 'PROCESSED'){\n\t\t\t\tdata.ordersProcessed++\n\t\t\t\tdata.activeOrders++\n\n\t\t\t} else if(currentOrder.status === 'SHIPPED'){\n\t\t\t\tdata.ordersShipped++\n\t\t\t\tdata.activeOrders++\n\t\t\t} \n\n\t\t\tif(currentOrder.invoice === null){\n\t\t\t\tdata.missingInvoices++\n\n\t\t\t} else if(!currentOrder.invoice.isPaid){\n\t\t\t\tdata.unpaidInvoices++\n\t\t\t\t\t\n\t\t\t}\n\t\t}\n\n\t\treturn data\n\t}\n\n\tconst getOrders = () => {\n\t\t//where API code could go\n\t\treturn orders;\n\t}\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<header className='App-header'>\n\t\t\t\t<NavBar activeButton={displayContent} buttonOnClick={setDisplayContent}/>\n\t\t\t\t{displayContent == DisplayContent.DASHBOARD && <Dashboard setDisplayContent={setDisplayContent} getQuickStatsData={getQuickStatsData}/>}\n\t\t\t\t{displayContent == DisplayContent.ORDERS && <Orders updateOrder={updateOrder} deleteOrder={deleteOrder} addOrder={addOrder} getOrders={getOrders}/>}\n\t\t\t\t{displayContent == DisplayContent.INVOICES && <Invoices updateOrder={updateOrder} deleteOrder={deleteOrder} getOrders={getOrders}/>}\n\t\t\t\t{displayContent == DisplayContent.ORDER_SEARCH && <Dashboard setDisplayContent={setDisplayContent} getQuickStatsData={getQuickStatsData}/>}\n\t\t\t\t{displayContent == DisplayContent.HELP && <Dashboard setDisplayContent={setDisplayContent} getQuickStatsData={getQuickStatsData}/>}\n\t\t\t\t{displayContent == DisplayContent.LOGOUT && <Dashboard setDisplayContent={setDisplayContent} getQuickStatsData={getQuickStatsData}/>}\n\t\t\t</header>\n\t\t</div>\n\t)\n}\n\nexport default App;\n","/Users/gabrielleacquista/Documents/ACADEMIC/MQP/test-app/src/components/Orders.js",["57","58","59","60","61","62"],[],"import cross_red from './img/close_red.svg'\r\nimport cross_white from './img/close_white.svg'\r\nimport { useState } from 'react'\r\n\r\nexport const TabType = {\r\n\tACTIVE: 1,\r\n\tINACTIVE: 2,\r\n}\r\n\r\nconst TabButton = ({id, text, tabType, viewType, onClick, onDelete}) => {\r\n\tif(tabType === TabType.ACTIVE){\r\n\t\treturn(\r\n\t\t\t<div className='tabRowButtonActive' onClick={() => onClick(id)}>\r\n\t\t\t\t<h3 style={{fontWeight: 'bold'}}>{text}</h3>\r\n\t\t\t\t{viewType === ViewType.ORDER_VIEW && <img src={cross_white} style={{paddingLeft: '10px'}} onClick={(event) => onDelete(id, event)}/> }\r\n\t\t\t</div>\r\n\t\t)\r\n\t} else if(tabType === TabType.INACTIVE){\r\n\t\treturn(\r\n\t\t\t<div className='tabRowButton' onClick={() => onClick(id)}>\r\n\t\t\t\t<h3 style={{fontWeight: 'bold'}}>{text}</h3>\r\n\t\t\t\t{viewType === ViewType.ORDER_VIEW && <img src={cross_red} style={{paddingLeft: '10px'}} onClick={(event) => onDelete(id, event)}/> }\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst OrderCard = ({order, color, onClick}) => {\r\n\tvar numberOfLogs = 0\r\n\torder.productsOrdered.forEach(product => numberOfLogs+= product.quantity)\r\n\r\n\treturn(\r\n\t\t<div className='OrderCard' onClick={() => onClick(order)}>\r\n\t\t\t<div className='OrderCardHeader' style={{backgroundColor: color}}>\r\n\t\t\t\t<h4 style={{fontWeight: 'bold'}}>{order.customer.lastName}, {order.customer.firstName}</h4>\r\n\t\t\t</div>\r\n\t\t\t<div className='OrderCardContent'>\r\n\t\t\t\t<h4>Reference: {order.referenceNumber}</h4>\r\n\t\t\t\t<h4>Invoice: {(order.invoiceNumber === undefined) ? 'NA' : order.invoiceNumber}</h4>\r\n\t\t\t\t<h4>Logs Ordered: {numberOfLogs}</h4>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst OrderDisplayColumn = ({title, orders, orderCardOnClick}) => {\r\n\treturn(\r\n\t\t<ul className='OrderDisplayColumn'>\r\n\t\t\t<li style={{position: 'sticky', top: '0px'}}><div className='OrderDisplayColumnTitle'><h3 style={{padding: '0px', margin: '0px'}}>{title}</h3></div></li>\r\n\r\n\t\t\t{orders.map((order) => (\r\n\t\t\t\t<li><OrderCard key={order.referenceNumber} order={order} color='#90E0C9' onClick={orderCardOnClick} /></li>\r\n\t\t\t))}\r\n\t\t</ul>\r\n\t)\r\n}\r\n\r\nconst ActiveOrders = ({orders, orderCardOnClick}) => {\r\n\treturn (\r\n\t\t<div id='OrderDisplayColumns'>\r\n\t\t\t<OrderDisplayColumn title='Placed' orders={orders.filter(order => order.status === 'PLACED')} orderCardOnClick={orderCardOnClick} />\r\n\t\t\t<OrderDisplayColumn title='Processed' orders={orders.filter(order => order.status === 'PROCESSED')} orderCardOnClick={orderCardOnClick} />\r\n\t\t\t<OrderDisplayColumn title='Shipped' orders={orders.filter(order => order.status === 'SHIPPED')} orderCardOnClick={orderCardOnClick} />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst CompletedOrders = ({orders, orderCardOnClick}) => {\r\n\treturn (\r\n\t\t<div id='OrderDisplayColumns' style={{display: 'flex', displayDirection: 'column'}}>\r\n\t\t\t<OrderDisplayColumn title='Completed' orders={orders} orderCardOnClick={orderCardOnClick} />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst useOrderForm = (order, orderFunction) => {\r\n\tconst [inputs, setInputs] = useState(order)\r\n\t/*const [newOrder, setOrder] = useState(order)*/\r\n\r\n\tconst handleSubmit = (event) => {\r\n\t\tif(event) {\r\n\t\t\tevent.preventDefault()\r\n\t\t\torderFunction(inputs)\r\n\t\t}\r\n\t}\r\n\tconst handleInputChange = (event) => {\r\n\t\tevent.persist()\r\n\t\tsetInputs(inputs => ({...inputs, [event.target.name]: event.target.value}))\r\n\t}\r\n\treturn {\r\n\t\thandleSubmit,\r\n\t\thandleInputChange,\r\n\t\tinputs\r\n\t};\r\n}\r\n\r\nconst OrderViewEdit = ({order, orderFunction}) => {\r\n\tconst {inputs, handleInputChange, handleSubmit} = useOrderForm(order, orderFunction)\r\n\tlet recipient\r\n\tif(order.isGift){\r\n\t\trecipient = order.giftFor\r\n\r\n\t} else{\r\n\t\trecipient = order.customer.firstName + ' ' + order.customer.lastName \r\n\t}\r\n\r\n\tvar numberOfFlavors = 0\r\n\torder.productsOrdered.forEach(product => numberOfFlavors++)\r\n\r\n\tvar numberOfLogs = 0\r\n\torder.productsOrdered.forEach(product => numberOfLogs+= product.quantity)\r\n\r\n\treturn (\r\n\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t<div id='OrderView'>\r\n\t\t\t\t<div id='OrderView_Header'>\r\n\t\t\t\t\t<button type=\"submit\">Save</button>\r\n\t\t\t\t\t<button>Cancel</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='Row'>\r\n\t\t\t\t\t<div className='Column'>\r\n\t\t\t\t\t\t<div id='OrderView_General_Details'>\r\n\t\t\t\t\t\t\t<table>\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Reference #</h4></td>\r\n\t\t\t\t\t\t\t\t\t<td><input type=\"text\" name=\"referenceNumber\" onChange={handleInputChange} value={inputs.referenceNumber} defaultValue={order.referenceNumber} required/></td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Invoice #</h4></td>\r\n\t\t\t\t\t\t\t\t\t<td><input type=\"text\" name=\"invoiceNumber\" onChange={handleInputChange} value={inputs.invoiceNumber} defaultValue={order.invoiceNumber}/></td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Date Placed</h4></td>\r\n\t\t\t\t\t\t\t\t\t<td><input type=\"text\" name=\"datePlaced\" onChange={handleInputChange} value={inputs.datePlaced} defaultValue={order.datePlaced} required/></td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div id='OrderView_Customer_Details'>\r\n\t\t\t\t\t\t\t<table>\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>First Name<br></br>Last Name</h4></td>\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"text\" name=\"customer.firstName\" onChange={handleInputChange} value={inputs.customer.firstName} defaultValue={order.customer.firstName} required/><br></br>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"text\" name=\"lastName\" onChange={handleInputChange} value={inputs.customer.lastName} defaultValue={order.customer.lastName} required/>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Email</h4></td>\r\n\t\t\t\t\t\t\t\t\t<td><input type=\"email\" name=\"email\" onChange={handleInputChange} value={inputs.customer.email} defaultValue={order.customer.email} required/></td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Phone</h4></td>\r\n\t\t\t\t\t\t\t\t\t<td><input type=\"tel\" name=\"phoneNumber\"onChange={handleInputChange}  value={inputs.customer.phoneNumber} defaultValue={order.customer.phoneNumber} required/></td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div id='OrderView_Shipping_Details'>\r\n\t\t\t\t\t\t<table>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Recipient</h4></td>\r\n\t\t\t\t\t\t\t\t{order.isGift && <td><input type=\"text\" name=\"giftFor\" onChange={handleInputChange} value={inputs.giftFor} defaultValue={recipient} required/></td>}\r\n\t\t\t\t\t\t\t\t{!order.isGift && <td><h4>{recipient}</h4></td>}\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Street Address<br></br>City<br></br>State<br></br>Zipcode</h4></td>\r\n\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" name=\"streetAddress\" onChange={handleInputChange} value={inputs.shippingAddress.streetAddress} defaultValue={order.shippingAddress.streetAddress} required/><br></br>\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" name=\"city\" onChange={handleInputChange} value={inputs.shippingAddress.city} defaultValue={order.shippingAddress.city} required/><br></br>\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" name=\"state\" onChange={handleInputChange} value={inputs.shippingAddress.state} defaultValue={order.shippingAddress.state} required/><br></br>\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" name=\"zipcode\" onChange={handleInputChange} value={inputs.shippingAddress.zipCode} defaultValue={order.shippingAddress.zipCode} required/>\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Tracking #</h4></td>\r\n\t\t\t\t\t\t\t\t<input type=\"text\" name=\"shipmentTrackingNumber\" onChange={handleInputChange} value={inputs.shipmentTrackingNumber} defaultValue={order.shipmentTrackingNumber}/>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Is Gift?</h4></td>\r\n\t\t\t\t\t\t\t\t{order.isGift && <td><input type=\"checkbox\" onChange={handleInputChange} value={inputs.isGift} name=\"isGift\" checked/></td>}\r\n\t\t\t\t\t\t\t\t{!order.isGift && <td><input type=\"checkbox\" onChange={handleInputChange} value={inputs.isGift} name=\"isGift\"/></td>}\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t{order.isGift && order.giftMessage !== '' && <td><h4 style={{fontWeight: 'bold'}}>Gift Message</h4></td>}\r\n\t\t\t\t\t\t\t\t{order.isGift && order.giftMessage !== '' && <td><input type=\"text\" name=\"giftMessage\" onChange={handleInputChange} value={inputs.giftMessage} defaultValue={order.giftMessage}/></td>}\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</table>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div id='OrderView_Products_Details'>\r\n\t\t\t\t\t<h4 style={{fontWeight: 'bold'}}>Flavor Information</h4>\r\n\t\t\t\t\t<div className='Row'>\r\n\t\t\t\t\t\t<table>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<th><h4 style={{fontWeight: 'bold'}}>Name</h4></th>\r\n\t\t\t\t\t\t\t\t<th><h4 style={{fontWeight: 'bold'}}>SKU</h4></th>\r\n\t\t\t\t\t\t\t\t<th><h4 style={{fontWeight: 'bold'}}>Quantity</h4></th>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t{order.productsOrdered.map((product) => (\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<td><h4>{product.product.name}</h4></td>\r\n\t\t\t\t\t\t\t\t\t<td><h4>{product.product.id}</h4></td>\r\n\t\t\t\t\t\t\t\t\t<td><h4>{product.quantity}</h4></td>\r\n\t\t\t\t\t\t\t\t</tr>\t\t\t\t\t\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t<table>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<th><h4 style={{fontWeight: 'bold'}}>At a Glance:</h4></th>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Total Number of Logs:</h4></td>\r\n\t\t\t\t\t\t\t\t<td><h4>{numberOfLogs}</h4></td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Total Number of Flavors:</h4></td>\r\n\t\t\t\t\t\t\t\t<td><h4>{numberOfFlavors}</h4></td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</table>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\nconst OrderView = ({order, editOrder}) => {\r\n\tlet recipient\r\n\tif(order.isGift){\r\n\t\trecipient = order.giftFor\r\n\r\n\t} else{\r\n\t\trecipient = order.customer.firstName + ' ' + order.customer.lastName \r\n\t}\r\n\r\n\tvar numberOfFlavors = 0\r\n\torder.productsOrdered.forEach(product => numberOfFlavors++)\r\n\r\n\tvar numberOfLogs = 0\r\n\torder.productsOrdered.forEach(product => numberOfLogs+= product.quantity)\r\n\r\n\treturn (\r\n\t\t<div id='OrderView'>\r\n\t\t\t<div id='OrderView_Header'>\r\n\t\t\t\t<button>text</button>\r\n\t\t\t</div>\r\n\t\t\t<div className='Row'>\r\n\t\t\t\t<div className='Column'>\r\n\t\t\t\t\t<div id='OrderView_General_Details'>\r\n\t\t\t\t\t\t<table>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Reference #</h4></td>\r\n\t\t\t\t\t\t\t\t<td><h4>{order.referenceNumber}</h4></td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Invoice #</h4></td>\r\n\t\t\t\t\t\t\t\t<td><h4>{order.invoiceNumber}</h4></td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Date Placed</h4></td>\r\n\t\t\t\t\t\t\t\t<td><h4>{order.datePlaced}</h4></td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</table>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div id='OrderView_Customer_Details'>\r\n\t\t\t\t\t\t<table>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Name</h4></td>\r\n\t\t\t\t\t\t\t\t<td><h4>{order.customer.firstName} {order.customer.lastName}</h4></td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Email</h4></td>\r\n\t\t\t\t\t\t\t\t<td><h4>{order.customer.email}</h4></td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Phone</h4></td>\r\n\t\t\t\t\t\t\t\t<td><h4>{order.customer.phoneNumber}</h4></td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</table>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div id='OrderView_Shipping_Details'>\r\n\t\t\t\t\t<table>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Recipient</h4></td>\r\n\t\t\t\t\t\t\t<td><h4>{recipient}</h4></td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Address</h4></td>\r\n\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t<h4>{order.shippingAddress.streetAddress}<br></br>{order.shippingAddress.city}, {order.shippingAddress.state}<br></br>{order.shippingAddress.zipCode}</h4>\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Tracking #</h4></td>\r\n\t\t\t\t\t\t\t<td><h4>{order.shipmentTrackingNumber}</h4></td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t{order.isGift && order.giftMessage !== '' && <td><h4 style={{fontWeight: 'bold'}}>Gift Message</h4></td>}\r\n\t\t\t\t\t\t\t{order.isGift && order.giftMessage !== '' && <td><h4>{order.giftMessage}</h4></td>}\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div id='OrderView_Products_Details'>\r\n\t\t\t\t<h4 style={{fontWeight: 'bold'}}>Flavor Information</h4>\r\n\t\t\t\t<div className='Row'>\r\n\t\t\t\t\t<table>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<th><h4 style={{fontWeight: 'bold'}}>Name</h4></th>\r\n\t\t\t\t\t\t\t<th><h4 style={{fontWeight: 'bold'}}>SKU</h4></th>\r\n\t\t\t\t\t\t\t<th><h4 style={{fontWeight: 'bold'}}>Quantity</h4></th>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t{order.productsOrdered.map((product) => (\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td><h4>{product.product.name}</h4></td>\r\n\t\t\t\t\t\t\t\t<td><h4>{product.product.id}</h4></td>\r\n\t\t\t\t\t\t\t\t<td><h4>{product.quantity}</h4></td>\r\n\t\t\t\t\t\t\t</tr>\t\t\t\t\t\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</table>\r\n\t\t\t\t\t<table>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<th><h4 style={{fontWeight: 'bold'}}>At a Glance:</h4></th>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Total Number of Logs:</h4></td>\r\n\t\t\t\t\t\t\t<td><h4>{numberOfLogs}</h4></td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Total Number of Flavors:</h4></td>\r\n\t\t\t\t\t\t\t<td><h4>{numberOfFlavors}</h4></td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst ViewType = {\r\n\tACTIVE_ORDERS: 1,\r\n\tCOMPLETED_ORDERS: 2,\r\n\tORDER_VIEW: 3,\r\n}\r\n\r\nconst Orders = ({updateOrder, deleteOrder, addOrder, getOrders}) => {\r\n\tvar orders = getOrders()\r\n\tconst [displayText, setDisplayText] = useState(\"Orders\")\r\n\tconst [nextId, setNextId] = useState(3)\r\n\tconst [activeTabId, setActiveTabId] = useState(1)\r\n\tconst [tabs, setTabs] = useState([\r\n\t\t{\r\n\t\t\tid: 1,\r\n\t\t\ttext: 'Active Orders',\r\n\t\t\ttabType: TabType.ACTIVE,\r\n\t\t\tviewType: ViewType.ACTIVE_ORDERS,\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 2,\r\n\t\t\ttext: 'Completed Orders',\r\n\t\t\ttabType: TabType.INACTIVE,\r\n\t\t\tviewType: ViewType.COMPLETED_ORDERS,\r\n\t\t},\r\n\r\n\t])\r\n\r\n\tfunction addAndOpenOrderView(order){\r\n\t\tconst tab = tabs.find(tab => (tab.viewType === ViewType.ORDER_VIEW && order.id === tab.order.id))\r\n\t\tif(tab === undefined){\r\n\t\t\tconst newTab = {\r\n\t\t\t\tid: {nextId},\r\n\t\t\t\ttext: order.customer.lastName,\r\n\t\t\t\ttabType: TabType.ACTIVE,\r\n\t\t\t\tviewType: ViewType.ORDER_VIEW,\r\n\t\t\t\torder: order,\r\n\t\t\t}\r\n\r\n\t\t\tconst currentActiveTab = tabs.find(tab => tab.id === activeTabId)\r\n\t\t\tcurrentActiveTab.tabType = TabType.INACTIVE\r\n\t\t\tconst newTabsList = tabs.slice()\r\n\t\t\tsetTabs([...newTabsList, newTab])\r\n\t\t\tsetActiveTabId(newTab.id)\r\n\t\t\tsetNextId(nextId + 1)\r\n\r\n\t\t} else{\r\n\t\t\tsetActiveTab(tab.id)\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\tfunction removeOrderView(id, event){\r\n\t\tif(activeTabId === id){\r\n\t\t\tconst newActiveTab = tabs[tabs.length-2]\r\n\t\t\tnewActiveTab.tabType = TabType.ACTIVE\r\n\t\t\tconst newTabsList = tabs.slice().filter(tab => tab.id !== id)\r\n\t\t\tsetTabs(newTabsList)\r\n\t\t\tsetActiveTabId(newActiveTab.id)\r\n\r\n\t\t} else{\r\n\t\t\tsetTabs(tabs.filter(tab => tab.id !== id))\r\n\t\t}\r\n\r\n\t\t{/*So that the tab does not click when the close button is clicked*/}\r\n\t\tevent.stopPropagation()\r\n\t}\r\n\r\n\tfunction setActiveTab(id){\r\n\t\tconst currentActiveTab = tabs.find(tab => tab.id === activeTabId)\r\n\t\tconst newActiveTab = tabs.find(tab => tab.id === id)\r\n\t\tcurrentActiveTab.tabType = TabType.INACTIVE\r\n\t\tnewActiveTab.tabType = TabType.ACTIVE\r\n\t\tconst newTabsList = tabs.slice()\r\n\t\tsetTabs(newTabsList)\r\n\t\tsetActiveTabId(newActiveTab.id)\r\n\t}\r\n\r\n\tlet displayContent\r\n\tconst activeContent = tabs.find(tab => tab.id === activeTabId)\r\n\r\n\tswitch(activeContent.viewType){\r\n\t\tcase ViewType.ACTIVE_ORDERS:\r\n\t\t\tdisplayContent = <ActiveOrders orders={orders.filter(order => (order.status === 'PLACED' || order.status === 'PROCESSED' || order.status === 'SHIPPED'))} orderCardOnClick={addAndOpenOrderView} />\r\n\t\t\tbreak\r\n\t\tcase ViewType.COMPLETED_ORDERS:\r\n\t\t\tdisplayContent = <CompletedOrders orders={orders.filter(order => order.status === 'COMPLETED')} orderCardOnClick={addAndOpenOrderView} />\r\n\t\t\tbreak\r\n\t\tcase ViewType.ORDER_VIEW:\r\n\t\t\tdisplayContent = <OrderViewEdit order={activeContent.order} orderFunction={updateOrder} />\r\n\t\t\tbreak\r\n\t}\r\n\r\n\r\n\treturn(\r\n\t\t<div id='Orders'>\t\r\n\t\t\t<h1>{displayText}</h1>\r\n\t\t\t<div id='OrdersDisplay' style={{display: 'flex', displayDirection: 'column'}}>\r\n\t\t\t\t<div className='tabRow'>\r\n\t\t\t\t\t{tabs.map((tab) => (\r\n\t\t\t\t\t\t<TabButton key={tab.id} id={tab.id} text={tab.text} tabType={tab.tabType} viewType={tab.viewType} onClick={setActiveTab} onDelete={removeOrderView}/>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div id='rectangle' style={{height: '13px', width: '1144px', backgroundColor: '#C62032'}} />\r\n\t\t\t\t{displayContent}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Orders;","/Users/gabrielleacquista/Documents/ACADEMIC/MQP/test-app/src/components/Invoices.js",["63","64","65","66","67","68"],[],"import cross_red from './img/close_red.svg'\r\nimport cross_white from './img/close_white.svg'\r\nimport { useState } from 'react'\r\n\r\nexport const TabType = {\r\n\tACTIVE: 1,\r\n\tINACTIVE: 2,\r\n}\r\n\r\nconst TabButton = ({id, text, tabType, viewType, onClick, onDelete}) => {\r\n\tif(tabType === TabType.ACTIVE){\r\n\t\treturn(\r\n\t\t\t<div className='tabRowButtonActive' onClick={() => onClick(id)}>\r\n\t\t\t\t<h3 style={{fontWeight: 'bold'}}>{text}</h3>\r\n\t\t\t\t{viewType === ViewType.ORDER_VIEW && <img src={cross_white} style={{paddingLeft: '10px'}} onClick={(event) => onDelete(id, event)}/> }\r\n\t\t\t</div>\r\n\t\t)\r\n\t} else if(tabType === TabType.INACTIVE){\r\n\t\treturn(\r\n\t\t\t<div className='tabRowButton' onClick={() => onClick(id)}>\r\n\t\t\t\t<h3 style={{fontWeight: 'bold'}}>{text}</h3>\r\n\t\t\t\t{viewType === ViewType.ORDER_VIEW && <img src={cross_red} style={{paddingLeft: '10px'}} onClick={(event) => onDelete(id, event)}/> }\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst InvoiceCard = ({order, color, onClick}) => {\r\n\tvar numberOfLogs = 0\r\n\torder.productsOrdered.forEach(product => numberOfLogs+= product.quantity)\r\n\r\n\treturn(\r\n\t\t<div className='OrderCard' onClick={() => onClick(order)}>\r\n\t\t\t<div className='OrderCardHeader' style={{backgroundColor: color}}>\r\n\t\t\t\t<h4 style={{fontWeight: 'bold'}}>{order.customer.lastName}, {order.customer.firstName}</h4>\r\n\t\t\t</div>\r\n\t\t\t<div className='OrderCardContent'>\r\n\t\t\t\t<h4>Reference: {order.referenceNumber}</h4>\r\n\t\t\t\t<h4>Invoice: {(order.invoiceNumber === undefined) ? 'NA' : order.invoiceNumber}</h4>\r\n\t\t\t\t<h4>Logs Ordered: {numberOfLogs}</h4>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst InvoiceDisplayColumn = ({title, orders, cardOnClick}) => {\r\n\treturn(\r\n\t\t<ul className='OrderDisplayColumn'>\r\n\t\t\t<li style={{position: 'sticky', top: '0px'}}><div className='OrderDisplayColumnTitle'><h3 style={{padding: '0px', margin: '0px'}}>{title}</h3></div></li>\r\n\r\n\t\t\t{orders.map((order) => (\r\n\t\t\t\t<li><InvoiceCard key={order.referenceNumber} order={order} color='#90E0C9' onClick={cardOnClick} /></li>\r\n\t\t\t))}\r\n\t\t</ul>\r\n\t)\r\n}\r\n\r\nconst ActiveInvoices = ({orders, cardOnClick}) => {\r\n\treturn (\r\n\t\t<div id='OrderDisplayColumns'>\r\n\t\t\t<InvoiceDisplayColumn title='Missing' orders={orders.filter(order => order.invoice === undefined)} cardOnClick={cardOnClick} />\r\n\t\t\t<InvoiceDisplayColumn title='Unpaid' orders={orders.filter(order => order.invoice !== undefined && !order.invoice.isPaid)} cardOnClick={cardOnClick} />\r\n\t\t\t<InvoiceDisplayColumn title='Paid' orders={orders.filter(order => order.invoice !== undefined && order.invoice.isPaid)} cardOnClick={cardOnClick} />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst CompletedInvoices = ({orders, cardOnClick}) => {\r\n\treturn (\r\n\t\t<div id='OrdersDisplayColumns' style={{display: 'flex', displayDirection: 'column'}}>\r\n\t\t\t<InvoiceDisplayColumn title='Completed' orders={orders} cardOnClick={cardOnClick} />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst InvoiceView = ({order}) => {\r\n\tlet recipient\r\n\tif(order.isGift){\r\n\t\trecipient = order.giftFor\r\n\r\n\t} else{\r\n\t\trecipient = order.customer.firstName + ' ' + order.customer.lastName \r\n\t}\r\n\r\n\tvar numberOfLogs = 0\r\n\torder.productsOrdered.forEach(product => numberOfLogs++)\r\n\r\n\treturn (\r\n\t\tnull\r\n\t)\r\n}\r\n\r\nconst ViewType = {\r\n\tACTIVE_INVOICES: 1,\r\n\tCOMPLETED_INVOICES: 2,\r\n\tORDER_VIEW: 3,\r\n}\r\n\r\nconst Invoices = ({updateOrder, getOrders}) => {\r\n\r\n\tvar orders = getOrders()\r\n\tconst [displayText, setDisplayText] = useState(\"Invoices\")\r\n\tconst [nextId, setNextId] = useState(3)\r\n\tconst [activeTabId, setActiveTabId] = useState(1)\r\n\tconst [tabs, setTabs] = useState([\r\n\t\t{\r\n\t\t\tid: 1,\r\n\t\t\ttext: 'Active Invoices',\r\n\t\t\ttabType: TabType.ACTIVE,\r\n\t\t\tviewType: ViewType.ACTIVE_INVOICES,\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 2,\r\n\t\t\ttext: 'Completed Invoices',\r\n\t\t\ttabType: TabType.INACTIVE,\r\n\t\t\tviewType: ViewType.COMPLETED_INVOICES,\r\n\t\t},\r\n\r\n\t])\r\n\r\n\tfunction addAndOpenInvoiceView(order){\r\n\t\tconst tab = tabs.find(tab => (tab.viewType === ViewType.INVOICE_VIEW && order.referenceNumber === tab.order.referenceNumber))\r\n\t\tif(tab === undefined){\r\n\t\t\tconst newTab = {\r\n\t\t\t\tid: {nextId},\r\n\t\t\t\ttext: order.referenceNumber,\r\n\t\t\t\ttabType: TabType.ACTIVE,\r\n\t\t\t\tviewType: ViewType.INVOICE_VIEW,\r\n\t\t\t\torder: order,\r\n\t\t\t}\r\n\r\n\t\t\tconst currentActiveTab = tabs.find(tab => tab.id === activeTabId)\r\n\t\t\tcurrentActiveTab.tabType = TabType.INACTIVE\r\n\t\t\tconst newTabsList = tabs.slice()\r\n\t\t\tsetTabs([...newTabsList, newTab])\r\n\t\t\tsetActiveTabId(newTab.id)\r\n\t\t\tsetNextId(nextId + 1)\r\n\r\n\t\t} else{\r\n\t\t\tsetActiveTab(tab.id)\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\tfunction removeOrderView(id, event){\r\n\t\tif(activeTabId === id){\r\n\t\t\tconst newActiveTab = tabs[tabs.length-2]\r\n\t\t\tnewActiveTab.tabType = TabType.ACTIVE\r\n\t\t\tconst newTabsList = tabs.slice().filter(tab => tab.id !== id)\r\n\t\t\tsetTabs(newTabsList)\r\n\t\t\tsetActiveTabId(newActiveTab.id)\r\n\r\n\t\t} else{\r\n\t\t\tsetTabs(tabs.filter(tab => tab.id !== id))\r\n\t\t}\r\n\r\n\t\t{/*So that the tab does not click when the close button is clicked*/}\r\n\t\tevent.stopPropagation()\r\n\t}\r\n\r\n\tfunction setActiveTab(id){\r\n\t\tconst currentActiveTab = tabs.find(tab => tab.id === activeTabId)\r\n\t\tconst newActiveTab = tabs.find(tab => tab.id === id)\r\n\t\tcurrentActiveTab.tabType = TabType.INACTIVE\r\n\t\tnewActiveTab.tabType = TabType.ACTIVE\r\n\t\tconst newTabsList = tabs.slice()\r\n\t\tsetTabs(newTabsList)\r\n\t\tsetActiveTabId(newActiveTab.id)\r\n\t}\r\n\r\n\tlet displayContent\r\n\tconst activeContent = tabs.find(tab => tab.id === activeTabId)\r\n\r\n\tswitch(activeContent.viewType){\r\n\t\tcase ViewType.ACTIVE_INVOICES:\r\n\t\t\tdisplayContent = <ActiveInvoices orders={orders.filter(order => (order.status === 'PLACED' || order.status === 'PROCESSED' || order.status === 'SHIPPED'))} cardOnClick={addAndOpenInvoiceView} />\r\n\t\t\tbreak\r\n\t\tcase ViewType.COMPLETED_INVOICES:\r\n\t\t\tdisplayContent = <CompletedInvoices orders={orders.filter(order => order.status === 'COMPLETED')} cardOnClick={addAndOpenInvoiceView} />\r\n\t\t\tbreak\r\n\t\tcase ViewType.ORDER_VIEW:\r\n\t\t\tdisplayContent = <InvoiceView order={activeContent.order} />\r\n\t\t\tbreak\r\n\t}\r\n\r\n\r\n\treturn(\r\n\t\t<div id='Orders'>\t\r\n\t\t\t<h1>{displayText}</h1>\r\n\t\t\t<div id='OrdersDisplay' style={{display: 'flex', displayDirection: 'column'}}>\r\n\t\t\t\t<div className='tabRow'>\r\n\t\t\t\t\t{tabs.map((tab) => (\r\n\t\t\t\t\t\t<TabButton key={tab.id} id={tab.id} text={tab.text} tabType={tab.tabType} viewType={tab.viewType} onClick={setActiveTab} onDelete={removeOrderView}/>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div id='rectangle' style={{height: '13px', width: '1144px', backgroundColor: '#C62032'}} />\r\n\t\t\t\t{displayContent}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Invoices;","/Users/gabrielleacquista/Documents/ACADEMIC/MQP/test-app/src/components/Dashboard.js",[],[],"/Users/gabrielleacquista/Documents/ACADEMIC/MQP/test-app/src/components/Navbar.js",["69","70","71","72"],[],"import logo from './img/ggc_logo_dropshadow.png';\r\nimport {DisplayContent} from '../App.js';\r\n\r\n{/*Use 'active' for when the button's screen is being displayed. Anythiing else will be treated as inactive*/}\r\nconst NavBarButton = ({text, icon, onClick}) => {\r\n\tlet iconPath\r\n\r\n\tswitch(icon){\r\n\t\tcase DisplayContent.DASHBOARD:\r\n\t\t\ticonPath = require('./img/home_black.svg').default\r\n\t\t\tbreak\r\n\t\tcase DisplayContent.ORDERS:\r\n\t\t\ticonPath = require('./img/order_black.svg').default\r\n\t\t\tbreak\r\n\t\tcase DisplayContent.INVOICES:\r\n\t\t\ticonPath = require('./img/invoice_black.svg').default\r\n\t\t\tbreak\r\n\t\tcase DisplayContent.ORDER_SEARCH:\r\n\t\t\ticonPath = require('./img/search_black.svg').default\r\n\t\t\tbreak\r\n\t\tcase DisplayContent.HELP:\r\n\t\t\ticonPath = require('./img/help_black.svg').default\r\n\t\t\tbreak\r\n\t\tcase DisplayContent.LOGOUT:\r\n\t\t\ticonPath = require('./img/logout_black.svg').default\r\n\t\t\tbreak\r\n\t\tdefault:\r\n\t\t\tconsole.log(icon)\r\n\t}\r\n\r\n\treturn(\r\n\t\t<button className='NavBarButton' onClick={() => onClick(icon)}>\r\n\t\t\t<img src={iconPath} style={{paddingRight: '10px'}}/>\r\n\t\t\t<h4>{text}</h4>\r\n\t\t</button>\r\n\r\n\t)\r\n}\r\n\r\nconst NavBarButtonActive = ({text, icon, onClick}) => {\r\n\tlet iconPath\r\n\r\n\tswitch(icon){\r\n\t\tcase DisplayContent.DASHBOARD:\r\n\t\t\ticonPath = require('./img/home_white.svg').default\r\n\t\t\tbreak\r\n\t\tcase DisplayContent.ORDERS:\r\n\t\t\ticonPath = require('./img/order_white.svg').default\r\n\t\t\tbreak\r\n\t\tcase DisplayContent.INVOICES:\r\n\t\t\ticonPath = require('./img/invoice_white.svg').default\r\n\t\t\tbreak\r\n\t\tcase DisplayContent.ORDER_SEARCH:\r\n\t\t\ticonPath = require('./img/search_white.svg').default\r\n\t\t\tbreak\r\n\t\tcase DisplayContent.HELP:\r\n\t\t\ticonPath = require('./img/help_white.svg').default\r\n\t\t\tbreak\r\n\t\tcase DisplayContent.LOGOUT:\r\n\t\t\ticonPath = require('./img/logout_white.svg').default\r\n\t\t\tbreak\r\n\t\tdefault:\r\n\t\t\tconsole.log(icon)\r\n\t}\r\n\r\n\treturn(\r\n\t\t<button className='NavBarButtonActive' onClick={() => onClick(icon)}>\r\n\t\t\t<img src={iconPath} style={{paddingRight: '10px'}}/>\r\n\t\t\t<h4>{text}</h4>\r\n\t\t</button>\r\n\r\n\t)\r\n}\r\n\r\nconst NavBar = ({activeButton, buttonOnClick}) => {\r\n\treturn(\r\n\t\t<div id='NavBar'>\r\n\t\t\t<div id='NavBarTop'>\r\n\t\t\t\t<img src={logo} height='150' width='150' />\r\n\t\t\t\t<h2>G.O.A.T.S.</h2>\r\n\t\t\t\t{activeButton === DisplayContent.DASHBOARD ? <NavBarButtonActive text='Dashboard' icon={DisplayContent.DASHBOARD} onClick={buttonOnClick}/> : <NavBarButton text='Dashboard' icon={DisplayContent.DASHBOARD} onClick={buttonOnClick}/>}\r\n\t\t\t\t{activeButton === DisplayContent.ORDERS ? <NavBarButtonActive text='Orders' icon={DisplayContent.ORDERS} onClick={buttonOnClick}/> : <NavBarButton text='Orders' icon={DisplayContent.ORDERS} onClick={buttonOnClick}/>}\r\n\t\t\t\t{activeButton === DisplayContent.INVOICES ? <NavBarButtonActive text='Invoices' icon={DisplayContent.INVOICES} onClick={buttonOnClick}/> : <NavBarButton text='Invoices' icon={DisplayContent.INVOICES} onClick={buttonOnClick}/>}\r\n\t\t\t\t{activeButton === DisplayContent.ORDER_SEARCH ? <NavBarButtonActive text='Order Search' icon={DisplayContent.ORDER_SEARCH} onClick={buttonOnClick}/> : <NavBarButton text='Order Search' icon={DisplayContent.ORDER_SEARCH} onClick={buttonOnClick}/>}\r\n\t\t\t</div>\r\n\t\t\t<div id='NavBarBottom'>\r\n\t\t\t\t{activeButton === DisplayContent.HELP ? <NavBarButtonActive text='Help' icon={DisplayContent.HELP} onClick={buttonOnClick}/> : <NavBarButton text='Help' icon={DisplayContent.HELP} onClick={buttonOnClick}/>}\r\n\t\t\t\t{activeButton === DisplayContent.LOGOUT ? <NavBarButtonActive text='Logout' icon={DisplayContent.LOGOUT} onClick={buttonOnClick}/> : <NavBarButton text='Logout' icon={DisplayContent.LOGOUT} onClick={buttonOnClick}/>}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default NavBar","/Users/gabrielleacquista/Documents/ACADEMIC/MQP/test-app/src/components/QuickStats.js",[],[],{"ruleId":"73","severity":1,"message":"74","line":1,"column":8,"nodeType":"75","messageId":"76","endLine":1,"endColumn":12},{"ruleId":"73","severity":1,"message":"77","line":18,"column":7,"nodeType":"75","messageId":"76","endLine":18,"endColumn":17},{"ruleId":"78","severity":1,"message":"79","line":24,"column":14,"nodeType":"80","messageId":"81","endLine":24,"endColumn":16},{"ruleId":"73","severity":1,"message":"82","line":203,"column":9,"nodeType":"75","messageId":"76","endLine":203,"endColumn":19},{"ruleId":"73","severity":1,"message":"83","line":203,"column":21,"nodeType":"75","messageId":"76","endLine":203,"endColumn":34},{"ruleId":"84","severity":1,"message":"85","line":269,"column":21,"nodeType":"86","messageId":"81","endLine":269,"endColumn":23},{"ruleId":"84","severity":1,"message":"85","line":270,"column":21,"nodeType":"86","messageId":"81","endLine":270,"endColumn":23},{"ruleId":"84","severity":1,"message":"85","line":271,"column":21,"nodeType":"86","messageId":"81","endLine":271,"endColumn":23},{"ruleId":"84","severity":1,"message":"85","line":272,"column":21,"nodeType":"86","messageId":"81","endLine":272,"endColumn":23},{"ruleId":"84","severity":1,"message":"85","line":273,"column":21,"nodeType":"86","messageId":"81","endLine":273,"endColumn":23},{"ruleId":"84","severity":1,"message":"85","line":274,"column":21,"nodeType":"86","messageId":"81","endLine":274,"endColumn":23},{"ruleId":"87","severity":1,"message":"88","line":15,"column":42,"nodeType":"89","endLine":15,"endColumn":137},{"ruleId":"87","severity":1,"message":"88","line":22,"column":42,"nodeType":"89","endLine":22,"endColumn":135},{"ruleId":"73","severity":1,"message":"90","line":230,"column":7,"nodeType":"75","messageId":"76","endLine":230,"endColumn":16},{"ruleId":"73","severity":1,"message":"91","line":355,"column":22,"nodeType":"75","messageId":"76","endLine":355,"endColumn":36},{"ruleId":"92","severity":1,"message":"93","line":410,"column":3,"nodeType":"94","messageId":"95","endLine":410,"endColumn":72},{"ruleId":"96","severity":1,"message":"97","line":427,"column":2,"nodeType":"98","messageId":"99","endLine":437,"endColumn":3},{"ruleId":"87","severity":1,"message":"88","line":15,"column":42,"nodeType":"89","endLine":15,"endColumn":137},{"ruleId":"87","severity":1,"message":"88","line":22,"column":42,"nodeType":"89","endLine":22,"endColumn":135},{"ruleId":"73","severity":1,"message":"100","line":82,"column":3,"nodeType":"75","messageId":"76","endLine":82,"endColumn":12},{"ruleId":"73","severity":1,"message":"91","line":102,"column":22,"nodeType":"75","messageId":"76","endLine":102,"endColumn":36},{"ruleId":"92","severity":1,"message":"93","line":157,"column":3,"nodeType":"94","messageId":"95","endLine":157,"endColumn":72},{"ruleId":"96","severity":1,"message":"97","line":174,"column":2,"nodeType":"98","messageId":"99","endLine":184,"endColumn":3},{"ruleId":"92","severity":1,"message":"101","line":4,"column":1,"nodeType":"94","messageId":"102","endLine":4,"endColumn":111},{"ruleId":"87","severity":1,"message":"88","line":33,"column":4,"nodeType":"89","endLine":33,"endColumn":56},{"ruleId":"87","severity":1,"message":"88","line":68,"column":4,"nodeType":"89","endLine":68,"endColumn":56},{"ruleId":"87","severity":1,"message":"88","line":79,"column":5,"nodeType":"89","endLine":79,"endColumn":48},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'UserStatus' is assigned a value but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'userStatus' is assigned a value but never used.","'setUserStatus' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'OrderView' is assigned a value but never used.","'setDisplayText' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'recipient' is assigned a value but never used.","Block is redundant.","redundantBlock"]